services:
  postgres:
    container_name: postgres_container
    image: postgres:14
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - postgres-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_PROXY_X_FOR_COUNT: 1
      PGADMIN_CONFIG_PROXY_X_PROTO_COUNT: 1
      PGADMIN_CONFIG_PROXY_X_HOST_COUNT: 1
      PGADMIN_CONFIG_PROXY_X_PORT_COUNT: 1
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

networks:
  postgres-network:
    driver: bridge

volumes:
  postgres:
  pgadmin: